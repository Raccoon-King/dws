apiVersion: apps/v1
kind: Deployment
metadata:
  name: dws-deployment
  namespace: dws
  labels:
    app: dws
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: dws
  template:
    metadata:
      labels:
        app: dws
        version: v1
    spec:
      containers:
      - name: dws
        image: dws:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: RULES_FILE
          valueFrom:
            configMapKeyRef:
              name: dws-config
              key: RULES_FILE
        - name: LOGGING
          valueFrom:
            configMapKeyRef:
              name: dws-config
              key: LOGGING
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: dws-config
              key: LOG_LEVEL
        volumeMounts:
        - name: rules-volume
          mountPath: /root/rules.yaml
          subPath: rules.yaml
          readOnly: true
        - name: rules-volume
          mountPath: /root/rules.json
          subPath: rules.json
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: rules-volume
        configMap:
          name: dws-rules
      securityContext:
        fsGroup: 1000